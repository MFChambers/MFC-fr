[
  {
    "objectID": "250_Projects/P1_template.html",
    "href": "250_Projects/P1_template.html",
    "title": "Client Report - What’s in a Name?",
    "section": "",
    "text": "Show the code\nimport pandas as pd\nimport numpy as np\nfrom lets_plot import *\n\nLetsPlot.setup_html(isolated_frame=True)\n\ndf = pd.read_csv(\"https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv\")"
  },
  {
    "objectID": "250_Projects/P1_template.html#how-does-your-name-at-your-birth-year-compare-to-its-use-historically",
    "href": "250_Projects/P1_template.html#how-does-your-name-at-your-birth-year-compare-to-its-use-historically",
    "title": "Client Report - What’s in a Name?",
    "section": "How does your name at your birth year compare to its use historically?",
    "text": "How does your name at your birth year compare to its use historically?\nAfter filtering the data, I was able to find that in 1999, the name “Maia” was given to a total of 370 babies in the U.S. It remained an relatively uncommon name, but showed some regional popularity clusters in larger more populated stats. The state with the most names was California with 66 babies that shared my name. This accounts for nearly 18% of the national total. I was born in Arizona, which had 8 babies born in 1999 named Maia, making it more meaninful to me to see my name reflected in the data from my birth year and state. Looking at the chart I created, the data suggests that while Maia wasn’t a top national name, it has been steadily adopted across a variety of coast, particularly in the coasts and in urbanized regions. The black line in the chart represents the underlying trend over time, a steady increase in popularity starting around the late 1990s and continuing past 2010. I expect that it will remain at this steady rate unless an outside source influences our society (Ex: popculture, movies, books, etc.).\n\n\nShow the code\n#Package that turns data from python lists, dictionaries, pandas df to nicely formatted tables. clean, printable string\nfrom tabulate import tabulate\n\n#Naming my variable and assigning my year of birth so that I can look up the data within this year\nmy_name = \"Maia\"\nbirth_year = 1999\n\n#The df is shorthand for DataFrame, with this specific application here, it allows me to create a new variable to store the filtered DataFrame, which only contains rows for the name\"Maia\"\n\n#The .copy() creates a separate copy of the filtered DataFrame to avoid warnings when modifying it later.\nmy_name_df = df[df['name'] == my_name].copy()\n\n#The \"my_name_df...th_year\" creates a Boolean filter: Returns TRUE for rows where the year is 1999, and FALSE otherwise.\nbirth_year_count = my_name_df[my_name_df['year'] == birth_year]\n\n#Prints the filtered DataFrame to show how many babies named \"Maia\" were born in 1999, across all U.S. states.\nprint(birth_year_count)\n\n#Creates a new DF named maia_df that includes only the rows where the baby name is \"Maia\". The .copy() ensures you're working with a safe, modifiable version.\nmaia_df = df[df['name'] == 'Maia'].copy()\n\n#Helps weed out the potential outliers so that the graphs I create later don't have skewed data based on outliers\npotential_outliers = maia_df.query(\"Total &gt; 500 | (Total &gt; 300 & year &gt; 2010)\").copy()\n\n#This part actually shows how many babies were named Maia ineach U.S. state in 1999\nmaia_1999 = df[(df['name'] == 'Maia') & (df['year'] == 1999)].copy()\n\n#This cleans the data so that the other unnecessary columns don't appear\nmaia_1999_clean = maia_1999.drop(columns=['name', 'year'])\n\n#This just moves the data from a wide format to a long format in an attempt to make the data easier to read\nmaia_long = maia_1999_clean.melt(var_name='State', value_name='Count')\n\n#I didn't like that it showed even the states that had no babies named \"Maia\" so I filtered it to not do that.\nmaia_nonzero = maia_long[maia_long['Count'] &gt; 0]\n\n#This sorts the data by most popular to least popular, easier to read.\nmaia_sorted = maia_nonzero.sort_values(by='Count', ascending=False).reset_index(drop=True)\n\n#Prints a title above the table\nprint(\"Top States for the Name 'Maia' in 1999:\\n\")\nprint(tabulate(maia_sorted, headers='keys', tablefmt='github', showindex=False))\n\n\n        name  year   AK   AL   AR   AZ    CA   CO    CT   DC  ...   TN    TX  \\\n252672  Maia  1999  0.0  0.0  0.0  8.0  66.0  0.0  11.0  0.0  ...  0.0  18.0   \n\n         UT    VA   VT    WA   WI   WV   WY  Total  \n252672  7.0  15.0  0.0  14.0  5.0  0.0  0.0  370.0  \n\n[1 rows x 54 columns]\nTop States for the Name 'Maia' in 1999:\n\n| State   |   Count |\n|---------|---------|\n| Total   |     370 |\n| CA      |      66 |\n| NY      |      38 |\n| PA      |      22 |\n| OH      |      21 |\n| TX      |      18 |\n| FL      |      16 |\n| MA      |      16 |\n| VA      |      15 |\n| WA      |      14 |\n| IL      |      14 |\n| MN      |      13 |\n| NJ      |      12 |\n| OR      |      12 |\n| NC      |      11 |\n| CT      |      11 |\n| MI      |       9 |\n| MD      |       8 |\n| AZ      |       8 |\n| MO      |       7 |\n| UT      |       7 |\n| NM      |       6 |\n| IN      |       6 |\n| RI      |       5 |\n| IA      |       5 |\n| GA      |       5 |\n| WI      |       5 |\n\n\n\n\nShow the code\n(\n    ggplot(maia_df, aes(x='year', y='Total')) +\n    #plots each data point (a year w/ a total count for 'Maia') as a black dot\n    geom_point(color='black') +\n    #smooths out the year-to-year fluctuations and helps underly the trend over time\n    geom_smooth(se=False, method='loess', color='black') + \n    #Highlights specific potential outliers\n    geom_point(data=potential_outliers, color='red') +\n    geom_label(\n        aes(label='year'),\n        data=potential_outliers,\n        color='red',\n        position=position_jitter(),\n        fontface='bold',\n        size=5,\n        hjust='left',\n        vjust='bottom',\n    ) +\n\n    #This creates a vertical line (hint the V line) to show the year that represents my birth, giving it more readability and allows someone to look for the data around my name.\n    geom_vline(xintercept=1999, color='blue', linetype='dashed') +\n    labs(\n        title=\"Babies named 'Maia': Outlier Years and Trends\",\n        subtitle=\"Outliers highlighted in red with labels\",\n        x=\"Year\",\n        y=\"Total Babies Named Maia\"\n    ) +\n    #Gives chart a clean, uncluttered look for clarity\n    theme_minimal() +\n    #Remove legend because everything is explained visually\n    theme(legend_position='none')\n)"
  },
  {
    "objectID": "250_Projects/P1_template.html#if-you-talked-to-someone-named-brittany-on-the-phone-what-is-your-guess-of-his-or-her-age-what-ages-would-you-not-guess",
    "href": "250_Projects/P1_template.html#if-you-talked-to-someone-named-brittany-on-the-phone-what-is-your-guess-of-his-or-her-age-what-ages-would-you-not-guess",
    "title": "Client Report - What’s in a Name?",
    "section": "If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?",
    "text": "If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?\nThe popularity of the name ‘Brittany’ peaked in the year 1990. The graph and trend lines show a rapid increas in popularity up to that year, followed by a rapid decline. Based on this data, I would guess that someone on the phone named Brittany would be in their early 30s because the peak year. I would not expect someone significantly younger such as 20 or significantly older over 40 to have this name, since its popularity was heavily concentrated in that narrow time window.\n\n\nShow the code\n#Similar to what I did earlier, filers the dataset to only the rows where the baby name is \"Brittany\"\n#The .copy() lets me work with a clean, independent copy of the data. That way it doesn't use mine from earlier\nbrittany_df = df[df['name'] == 'Brittany'].copy()\n\n#Filters data by year and give the total of all babies named Brittany across all states for each year\nbrittany_df = brittany_df.groupby('year', as_index=False)['Total'].sum()\n\n#Finds peak year (using max) that name had highest total count\n#.values[0] extracts the actual year number as an integer otherwise it will return as a pandas series\npeak_year = brittany_df[brittany_df['Total'] == brittany_df['Total'].max()]['year'].values[0]\n\n#prints output of results\nprint(f\"Brittany peaked in: {peak_year}\")\n\n\nBrittany peaked in: 1990\n\n\n\n\nShow the code\n(\n    ggplot(brittany_df, aes(x='year', y='Total')) +\n\n    #draws a purple line showing the popularity trend, typing 'purple' didn't seem to work, had to use the color code for purple. I wanted to try a different color besides black\n    geom_line(color='#FF1493', size=1.2) +  \n\n    #highlights using smooth line the general trend over time, easier to see rise and fall of name's popularity\n    geom_smooth(se=False, method='loess', color='black') +\n\n    #marks the peak year with red dashed line, making it easier to see\n    geom_vline(xintercept=peak_year, color='red', linetype='dashed', size=1) +\n    labs(\n        title=\"Popularity of the Name 'Brittany' Over Time\",\n        subtitle=f\"Peak year: {peak_year}\",\n        x=\"Year\",\n        y=\"Total Babies Named Brittany\"\n    ) +\n\n    #removes chart clutter and emphasizes the data\n    theme_minimal()\n)"
  },
  {
    "objectID": "250_Projects/P1_template.html#mary-martha-peter-and-paul-are-all-christian-names.-from-1920---2000-compare-the-name-usage-of-each-of-the-four-names-in-a-single-chart.-what-trends-do-you-notice",
    "href": "250_Projects/P1_template.html#mary-martha-peter-and-paul-are-all-christian-names.-from-1920---2000-compare-the-name-usage-of-each-of-the-four-names-in-a-single-chart.-what-trends-do-you-notice",
    "title": "Client Report - What’s in a Name?",
    "section": "Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names in a single chart. What trends do you notice?",
    "text": "Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names in a single chart. What trends do you notice?\nFrom 1920 - 2000, all four names show unique trends in popularity. This data shows that Mary reached it’s popularity peak in the early to mid-1900s before its steady deciline afters the 60’s. Martha shows a much more mild curve with a slower decline that begins around the 1950’s. Paul had a mid peak but immediatley declined in popularity after the 1970’s The data conveys that Peter is a consistently popular name that peaked during the mid-century and has gradually declined since. These patterns reflect shifts in cultural religious naming trends over the decades. It would be interesting to compare the name Peter with not just the Christian name, but Spider-man movie releases, which I believe would popularize the name Peter (Spider-man’s name is Peter Parker).\n\n\nShow the code\n#Assigns the Christian names to the name variable\nnames = ['Mary', 'Martha', 'Peter', 'Paul']\n\n#Filters the dataset to pull the four target names, also keeps the search between 1920 - 2000\ndf_subset = df[df['name'].isin(names) & df['year'].between(1920, 2000)].copy()\n\n#Groups and sums the total column across all states for each name during the outlines years\ngrouped = df_subset.groupby(['year', 'name'], as_index=False)['Total'].sum()\n\n( #Plots one line per name, colored distinctly\n    ggplot(grouped, aes(x='year', y='Total', color='name')) +\n    geom_line(size=1.2) +\n    labs(\n        title=\"Name Usage of Mary, Martha, Peter, and Paul (1920–2000)\",\n        subtitle=\"Christian names over time\",\n        x=\"Year\",\n        y=\"Total Babies Named\",\n    ) +\n    #Clean and professional appearance\n    theme_minimal()\n)"
  },
  {
    "objectID": "250_Projects/P1_template.html#think-of-a-unique-name-from-a-famous-movie.-plot-the-usage-of-that-name-and-see-how-changes-line-up-with-the-movie-release.-does-it-look-like-the-movie-had-an-effect-on-usage",
    "href": "250_Projects/P1_template.html#think-of-a-unique-name-from-a-famous-movie.-plot-the-usage-of-that-name-and-see-how-changes-line-up-with-the-movie-release.-does-it-look-like-the-movie-had-an-effect-on-usage",
    "title": "Client Report - What’s in a Name?",
    "section": "Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?",
    "text": "Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?\nOne of the most popular films to be released in the year 2013 was Disney’s Frozen. After this movie there was a surge in popularity. The chart shows the release year with a dashed black line. An immediate increase following that year reflects how influential the movie was in shaping modern baby name trends. The name did exist before the movie and appeared to have a gradual increase before but it peaked after the movie release. However, after 2015, it began to decline again.\n\n\nShow the code\n# Filter and group data for the name 'Elsa'. The df keeps only rows where the name is \"Elsa\".\n#.copy() makes copy of the filtered data.\nelsa_df = df[df['name'] == 'Elsa'].copy()\n\n#grouped/groupby turns it into a small df with two columns: year and total\nelsa_grouped = elsa_df.groupby('year', as_index=False)['Total'].sum()\n\n# Plot the trend with Frozen-style colors\n(\n    ggplot(elsa_grouped, aes(x='year', y='Total')) +\n    geom_line(color='#39FF14', size=1.8) +  # light sky blue\n    geom_smooth(se=False, method='loess', color='#4682B4') +  # steel blue smooth trend\n    geom_vline(xintercept=2013, color='black', linetype='dashed', size=1.2) + \n    labs(\n        title=\"Name 'Elsa' and the Impact of *Frozen*\",\n        subtitle=\"Dashed line marks the 2013 Disney release\",\n        x=\"Year\",\n        y=\"Total Babies Named Elsa\",\n    ) +\n    #Creates a clean visual and removes unnecessary clutter\n    theme_minimal()\n)"
  },
  {
    "objectID": "250_Projects/P1_template.html#stretch-reproduce-the-chart-elliot-using-the-data-from-the-names_year.csv-file.",
    "href": "250_Projects/P1_template.html#stretch-reproduce-the-chart-elliot-using-the-data-from-the-names_year.csv-file.",
    "title": "Client Report - What’s in a Name?",
    "section": "STRETCH: Reproduce the chart Elliot using the data from the names_year.csv file.",
    "text": "STRETCH: Reproduce the chart Elliot using the data from the names_year.csv file.\nLooking at the graph it shows there wasn’t a huge popularity of the name Elliot until after a spike in 1982. This spike suggests that the popularity of the movie E.T. had a great influence on the popularity of the name Elliot. After the initial release there was a spike followed by a step decline. After the second release there was another increase and spike right around 1989 followed by a much more gradual decline. Howoever after ther third release there was a much more gradual incline in popularity. This continued popularity suggests that it can gain popularity on its own after being introduced.\n\n\nShow the code\nelliot_df = df[df['name'] == 'Elliot'].copy()\n\n#groupeed/groupby puts year and sum total counts\nelliot_grouped = elliot_df.groupby('year', as_index=False)['Total'].sum()\n\n# Limits years 1950–2020\nelliot_grouped = elliot_grouped[elliot_grouped['year'].between(1950, 2020)]\n\nelliot_grouped['name'] = 'Elliot'\n\n# Reference lines for E.T. movie releases\nref_lines = pd.DataFrame({\n    'year': [1982, 1985, 2002],\n    'label': ['E.T. Released', 'Second Release', 'Third Release'],\n    'y': [1100, 1100, 1100] \n})\n(\n    ggplot(elliot_grouped, aes(x='year', y='Total', color='name')) +  # uses 'name' for legend title\n    geom_line(size=.5) +  # purple/blue line\n    scale_color_manual(values={\"Elliot\": \"#6A5ACD\"}, name=\"Name\") + \n\n    # Vertical dashed red lines at key movie release years\n    geom_vline(data=ref_lines, mapping=aes(xintercept='year'),\n               color='red', linetype='dashed') +\n\n    # Horizontal black text labels just above each red line\n    geom_text(\n        data=ref_lines,\n        mapping=aes(x='year', y='y', label='label'),\n        angle=0,\n        hjust=0.8,\n        vjust=-0.5,\n        size=4.5,\n        color='black',\n        fontface='bold'\n    ) +\n\n    # Titles and axis labels\n    labs(\n        title=\"Elliot... What?\",\n        x=\"Year\",\n        y=\"Total\",\n    ) +\n\n    # Lock axis limits\n    scale_x_continuous(limits=[1950, 2020]) +\n    scale_y_continuous(limits=[0, 1200]) +\n\n    # Clean visual appearance\n    theme_minimal()\n)"
  }
]